When would you want to use a remote repository rather than keeping all your work
local?

    If I work from different places (e.g., from office and from home), if I have
    other people involved in the project I work on

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    Because in this way I only have to merge when I want to.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Branches can be used anywhere, but it makes sense to create them locally 
    first, for example, when working on an experimental feature. When you clone
    somebody's repository, you can contribute to it the same way as the author,
    all your changes will be pushed in the initial repository. When you fork 
    somebody's repository, your changes won't affect the initial repository, 
    only your forked version.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Easy access to it.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Sharing code with colleagues would be much harder, but instead of pull 
    requests I may simply ask colleage who is sitting next to me to check my 
    commit :)

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    If I work on a complex feature or if several people work on different 
    features, using separate branches is a good approach since the changes
    you make can be reviewed by other people via pull request feature. If
    I work alone on something simple, it's enough to commit everything in master
    branch, it's more efficient.
